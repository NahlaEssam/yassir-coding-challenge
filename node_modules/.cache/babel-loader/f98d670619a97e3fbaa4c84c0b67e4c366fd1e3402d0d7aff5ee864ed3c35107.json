{"ast":null,"code":"var _jsxFileName = \"/Users/nahla/Desktop/yassir/yassir-coding-challenge/src/components/filter/index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './filter.scss';\nimport { Box, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Filter(props) {\n  _s();\n  const [filter, setFilter] = React.useState('');\n  const [value, setValue] = React.useState(null);\n  const handleChange = event => {\n    setFilter(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minWidth: 120\n    },\n    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n      label: \"Helper text example\",\n      value: value,\n      onChange: newValue => {\n        setValue(newValue);\n      },\n      renderInput: params => {\n        var _params$inputProps;\n        return /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          helperText: params === null || params === void 0 ? void 0 : (_params$inputProps = params.inputProps) === null || _params$inputProps === void 0 ? void 0 : _params$inputProps.placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(Filter, \"18ZMhi2F003mhmS/zhHzTMqENfc=\");\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","Box","TextField","jsxDEV","_jsxDEV","Filter","props","_s","filter","setFilter","useState","value","setValue","handleChange","event","target","sx","minWidth","children","DatePicker","label","onChange","newValue","renderInput","params","_params$inputProps","helperText","inputProps","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nahla/Desktop/yassir/yassir-coding-challenge/src/components/filter/index.tsx"],"sourcesContent":["import React from 'react';\nimport './filter.scss';\nimport { Box, FormControl, InputLabel, Select, MenuItem, SelectChangeEvent, TextField } from '@mui/material';\nimport { areaFilter, shiftFilter, statusFilter } from '../../mocks/filters';\n\nfunction Filter(props: any) {\n    const [filter, setFilter] = React.useState('');\n    const [value, setValue] = React.useState(null);\n\n    const handleChange = (event: SelectChangeEvent) => {\n        setFilter(event.target.value as string);\n    };\n    return (\n        <Box sx={{ minWidth: 120 }}>\n            {/* <FormControl fullWidth>\n                <InputLabel id=\"demo-simple-select-label\">Status:</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={filter}\n                    label=\"Age\"\n                    onChange={handleChange}\n                > {\n                        statusFilter.map(sFilter => (\n                            <MenuItem value={sFilter.value}>{sFilter.key}</MenuItem>\n                        ))\n                    }\n                </Select>\n            </FormControl> */}\n            \n      <DatePicker\n        label=\"Helper text example\"\n        value={value}\n        onChange={(newValue: any) => {\n          setValue(newValue);\n        }}\n        renderInput={(params: any) => (\n          <TextField {...params} helperText={params?.inputProps?.placeholder} />\n        )}\n      />\n   \n            {/* <FormControl fullWidth>\n                <InputLabel id=\"demo-simple-select-label\">Shift:</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={filter}\n                    label=\"Age\"\n                    onChange={handleChange}\n                >\n                    {\n                        shiftFilter.map(sFilter => (\n                            <MenuItem value={sFilter.value}>{sFilter.key}</MenuItem>\n                        ))\n                    }\n                </Select>\n            </FormControl> */}\n            {/* <FormControl fullWidth>\n                <InputLabel id=\"demo-simple-select-label\">Area:</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={filter}\n                    label=\"Age\"\n                    onChange={handleChange}\n                >\n\n                    {\n                        areaFilter.map(aFilter => (\n                            <MenuItem value={aFilter.value}>{aFilter.key}</MenuItem>\n                        ))\n                    }\n\n                </Select>\n            </FormControl> */}\n        </Box>\n    );\n}\n\nexport default Filter;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,SAASC,GAAG,EAAgEC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7G,SAASC,MAAMA,CAACC,KAAU,EAAE;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,KAAK,CAACU,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMG,YAAY,GAAIC,KAAwB,IAAK;IAC/CL,SAAS,CAACK,KAAK,CAACC,MAAM,CAACJ,KAAe,CAAC;EAC3C,CAAC;EACD,oBACIP,OAAA,CAACH,GAAG;IAACe,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAI,CAAE;IAAAC,QAAA,eAiB7Bd,OAAA,CAACe,UAAU;MACTC,KAAK,EAAC,qBAAqB;MAC3BT,KAAK,EAAEA,KAAM;MACbU,QAAQ,EAAGC,QAAa,IAAK;QAC3BV,QAAQ,CAACU,QAAQ,CAAC;MACpB,CAAE;MACFC,WAAW,EAAGC,MAAW;QAAA,IAAAC,kBAAA;QAAA,oBACvBrB,OAAA,CAACF,SAAS;UAAA,GAAKsB,MAAM;UAAEE,UAAU,EAAEF,MAAM,aAANA,MAAM,wBAAAC,kBAAA,GAAND,MAAM,CAAEG,UAAU,cAAAF,kBAAA,uBAAlBA,kBAAA,CAAoBG;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;IACtE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAoCK,CAAC;AAEd;AAACzB,EAAA,CAxEQF,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AA0Ef,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}